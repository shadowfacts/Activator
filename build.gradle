buildscript {
	repositories {
		mavenCentral()
		maven {
			name "forge"
			url "http://files.minecraftforge.net/maven/"
		}
		maven {
			name "sonatype"
			url "https://oss.sonatype.org/content/repositories/snapshots/"
		}
	}
	dependencies {
		classpath "net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT"
	}
}

apply plugin: "forge"
apply plugin: "curseforge"
apply plugin: "maven"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

version = mc_version + "-" + mod_version

minecraft {
	version = mc_version + "-" + forge_version
	runDir = "run"

	replace "@VERSION@", mod_version
	replaceIn "Activator.java"

	srgExtra "PK: net/shadowfacts/shadowlib net/shadowfacts/shadowmc/shadowlib"
}

processResources {
	inputs.property "version", project.version
	inputs.property "mcversion", project.minecraft.version

	from (sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'
		expand 'version':project.version, 'mcversion':project.minecraft.version
	}
	from (sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
	}
}
repositories {
	mavenCentral()
	maven {
		name "forge"
		url "http://files.minecraftforge.net/maven/"
	}
	maven {
		name "shadowfacts"
		url "http://mvn.rx14.co.uk/shadowfacts/"
	}
	maven {
		name "ChickenBones"
		url "http://chickenbones.net/maven/"
	}
	maven {
		name "ProfMobius"
		url "http://mobiusstrip.eu/maven/"
	}
}

configurations {
	shade
	compile.extendsFrom shade
}

dependencies {
	shade group: "net.shadowfacts", name: "ShadowMC", version: mc_version + "-" + shadowmc_version, classifier: "deobf"

	compile group: "codechicken", name: "CodeChickenLib", version: mc_version + "-" + ccl_version, classifier: "dev"
	compile group: "codechicken", name: "CodeChickenCore", version: mc_version + "-" + ccc_version, classifier: "dev"
	compile group: "codechicken", name: "NotEnoughItems", version: mc_version + "-" + nei_version, classifier: "dev"

	compile group: "mcp.mobius.waila", name: "Waila", version: waila_version + "_" + mc_version, classifier: "dev"
}

jar {
	configurations.shade.each { dep ->
		from (project.zipTree(dep)) {
			exclude 'META-INF', 'META-INF/**'
		}
	}
}

task deobfJar(type: Jar, dependsOn: classes) {
	from sourceSets.main.output
	classifier = "deobf"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	from sourceSets.main.allSource
	classifier = "sources"
}

artifacts {
	archives jar
	archives deobfJar
	archives sourcesJar
}

curse {
	projectId = "241037"
	apiKey = project.hasProperty("curseForgeApiKey") ? project.curseForgeApiKey : ""
	releaseType = "beta"
	addGameVersion "1.7.10"

	additionalArtifact deobfJar
	additionalArtifact sourcesJar
}